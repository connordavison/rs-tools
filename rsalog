#!/usr/bin/python
try:
	from feedparser import feedparser
	from getopt import getopt
	import requests
	import time
	import traceback
	import sys
except ImportError as e:
	print e
	print 'Ensure that /usr/bin/python is a python 2.7 shell.'
	exit(99)



class rsalog:

	__API_URL = 'http://services.runescape.com/m=adventurers-log/a=13/rssfeed?searchName='

	def __init__(self, username):
		self.__username = username
		dump = feedparser.parse(self.__API_URL + username)
		self.__logs = dump['entries']

	def to_string(self, l = 10, show_more = False):
		if self.__logs == []:
			return "Either this user does not exist, or their profile is not publicly available"
		out = ""
		i = 0
		for log in self.__logs:
			if i == l: break
			if show_more:
				out += log['summary'] + '\n'
			else:
				out += log['title'] + '\n'
			i += 1
		return out 

if __name__ == "__main__":
	err_msg = 'rsalog [ -h ] [ -s ] [ -l limit ] user0 [ user1 [ user2 ... ]]'
	help_msg = 'NAME:\n' + \
		'\trsalog - output the most recent events in particular users\' \n' + \
		'\tadventurers log.\n\n' + \
		'USAGE:\n' + \
		'\trsalog [OPTIONS] user0 [ user1 [ user2 ... ]]\n\n' + \
		'\tOutputs adventurers logs for users user0, user1, user2, etc.\n\n' + \
		'OPTIONS:\n' + \
		'\t-h\n' + \
		'\t\tDisplay this help text.\n\n' + \
		'\t-l limit\n' + \
		'\t\tRead `limit` logs, up to `limit`=10.\n\n' + \
		'\t-m\n' + \
		'\t\tDisplay the entire log message.\n'

	try:
		opts, args = getopt(sys.argv[1:], "hl:m")
	except:
		print err_msg
		exit(1)

	limit = 10
	show_more = False

	for flag, value in opts:
		if flag == '-l':
			if value is None: continue
			try:
				limit = int(value)
			except:
				print '-l requires an integer value'
				print err_msg
				exit(4)
		elif flag == '-m':
			show_more = True
		elif flag == '-h':
			print help_msg
			exit(0)

	if not args:
		print err_msg
		exit(2)

	for arg in args:
		rsa = rsalog(arg)
		print rsa.to_string(l = limit, show_more = show_more)